// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace ExamsSystem.Models
{
    public partial class SchoolContext : DbContext
    {
        public SchoolContext()
        {
        }

        public SchoolContext(DbContextOptions<SchoolContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Admin> Admins { get; set; }
        public virtual DbSet<Answer> Answers { get; set; }
        public virtual DbSet<Exam> Exams { get; set; }
        public virtual DbSet<Grade> Grades { get; set; }
        public virtual DbSet<Question> Questions { get; set; }
        public virtual DbSet<Student> Students { get; set; }

//        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
//        {
//            if (!optionsBuilder.IsConfigured)
//            {
//#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
//                optionsBuilder.UseSqlServer("Data Source=DESKTOP-VUVK6O7\\SQL2017;Initial Catalog=School;Integrated Security=True");
//            }
//        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Answer>(entity =>
            {
                entity.HasOne(d => d.Q_IDNavigation)
                    .WithOne(p => p.Answer)
                    .HasForeignKey<Answer>(d => d.Q_ID)
                    .HasConstraintName("FK__Answers__QID__4222D4EF");
            });

            modelBuilder.Entity<Exam>(entity =>
            {
                entity.HasOne(d => d.Admin)
                    .WithMany(p => p.Exams)
                    .HasForeignKey(d => d.Admin_ID)
                    .HasConstraintName("c1");
            });

            modelBuilder.Entity<Grade>(entity =>
            {
                entity.HasKey(e => new { e.Exam_ID, e.St_ID })
                    .HasName("PK__Grades__FDA3D9F53FFEDE1C");

                entity.HasOne(d => d.Exam)
                    .WithMany(p => p.Grades)
                    .HasForeignKey(d => d.Exam_ID)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Grades__EID__44FF419A");

                entity.HasOne(d => d.St)
                    .WithMany(p => p.Grades)
                    .HasForeignKey(d => d.St_ID)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Grades__StID__45F365D3");
            });

            modelBuilder.Entity<Question>(entity =>
            {
                entity.HasOne(d => d.Exam)
                    .WithMany(p => p.Questions)
                    .HasForeignKey(d => d.Exam_ID)
                    .HasConstraintName("FK__Questions__EID__3E52440B");
            });

            modelBuilder.Entity<Student>(entity =>
            {
                entity.HasOne(d => d.Admin)
                    .WithMany(p => p.Students)
                    .HasForeignKey(d => d.Admin_ID)
                    .HasConstraintName("c2");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}